N = int(input())

dp = [[0] * 10 for _ in range(N+1)]

for i in range(1, 10):
    dp[1][i] = 1

# TC: O(N^2)
for i in range(2, N+1):
    for j in range(0, 10):
        if j == 0:
            dp[i][0] = dp[i-1][j+1]
        elif j == 9:
            dp[i][9] = dp[i-1][j-1]
        else:
            dp[i][j] = (dp[i-1][j-1] + dp[i-1][j+1])

print(sum(dp[N]) % 1000000000)


"""
- N * 10 크기의 2차원 리스트 dp[][] 선언
- 문제에 대해, 아래와 같이 정의.
    - dp[i][j] 일 때
    - i = 계단수의 자리수(N)
    - j = 1의 자리의 수가 idx로 끝나는 계단수의 경우의 수 갯수
- 따라서, 점화식은 아래와 같이 정의할 수 있음.
    - 점화식 = dp[i][j] = (dp[i-1][j-1] + dp[i-1][j+1])

- e.g.) N = 2 일 때, 계단수의 경우의 수

| 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | (1의 자리수)
| 10 | 21 | 12 | 23 | 34 | 45 | 56 | 67 | 78 | 89 |
|    |    | 32 | 43 | 54 | 65 | 76 | 87 | 98 |    |

| 1  | 1  | 2  | 2  | 2  | 2  | 2  | 2  | 2  | 1  | (위 표에 따른 dp[2][]의 상태)

 => dp[2][0] ~ dp[2][9]의 합 = N이 2일 때 계단수의 개수
"""
